================================================================================
System Requirements
================================================================================

* A sane and working C++ compiler (g++, Visual Studio, Mingw, Xcode, ...)
* Nothing more

Download latest source code from [1], or use git:

	# git clone http://github.com/neoaggelos/synctool --depth 1

[1]: http://github.com/neoaggelos/synctool/archive/master.zip

================================================================================
Build using Make (Linux and Mac OS X)
================================================================================

Linux and Mac OS X users can just use make. Open a terminal and run:

	# cd path/to/synctool/source/code
	# make
	# sudo make install

This installs synctool in '/usr/local/bin'. To change this, use:

	# sudo make install PREFIX=/my/prefix

For MinGW under Windows, you can use:

	# make CXX=/path/to/mingw/g++ windows

================================================================================
Build with any IDE (Windows, Linux and Mac OS X)
================================================================================

Open your favourite IDE (e.g. Dev-Cpp, Code::Blocks, Visual Studio etc) and
create a new empty C++ project (name it 'SyncTool').

Add all files from the 'sources' directory in the project, and build.

================================================================================
Generate project files with premake (Windows, Linux and Mac OS X)
================================================================================

You can use premake[2] to generate project files for Visual Studio, GNU make
and Xcode. Use these project files to build SyncTool.

[2]: http://premake.github.io	"premake5 home page"

================================================================================
For developers
================================================================================

If you are interested in browsing the source code, you might need to know what
each source file does.

 main.cpp        -- Contains the main() function and utility routines
 synctool.cpp    -- Implements the 'high-level' sync tasks
 lowlevel.cpp    -- Implements the 'low-level' tasks and routines
 native_win.cpp  -- Native code for Windows systems
 native_lnx.cpp  -- Native code for Linux and Mac OS X systems

 synctool.h      -- Main header file
 mydirent.h      -- Includes system <dirent.h> or defines our own if needed

-- Aggelos Kolaitis